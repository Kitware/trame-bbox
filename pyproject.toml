[project]
name = "trame-bbox"
version = "0.0.1"
requires-python = ">= 3.9"
dependencies = [
  "trame-client",
]

authors = [
  {name = "Sebastien Jourdain", email = "sebastien.jourdain@kitware.com"},
]
maintainers = [
  {name = "Sebastien Jourdain", email = "sebastien.jourdain@kitware.com"},
]
description = "Bounding box widget for trame"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["web", "trame", "video", "annotation"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]

[project.optional-dependencies]
dev = [
  "ruff",
  "python-semantic-release",
  "pre-commit",
]
ci = [
  "build",
  "pre-commit",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.hatch.build.targets.sdist]
include = [
  "*.py",
]

[tool.hatch.build.targets.wheel]
packages = ["trame_bbox", "trame"]
artifacts = [
  "trame_bbox/module/serve/*.js",
]

[project.scripts]
semantic-release = "semantic_release.cli:main"

# -----------------------------------------------------------------------------
# Code quality: Ruff, Codespell
# -----------------------------------------------------------------------------

[tool.ruff]
include = ["pyproject.toml", "trame/**/*.py", "trame_bbox/**/*.py", "examples/**/*.py"]
line-length = 88
indent-width = 4
target-version = "py39"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "COM812",
  "ISC001",

  "D203",
  "D213",
  "D100",
  "D104",

  # **kwargs
  "D417",

  # Type annotation
  "ANN001",
  "ANN003",
  "ANN101",
  "ANN204",
]

[tool.ruff.lint.per-file-ignores]
"trame/*.py" = [
  "D100",
  "D103",
  "D104",
  "F403",
  "ANN001",
  "ANN201",
]
"examples/*.py" = [
  "INP001",
  "D101",
  "D102",
  "D103",
  "D107",
  "ANN201",
  "ANN202",
  "ARG002",
]


# -----------------------------------------------------------------------------

[tool.codespell]
skip = "**/package-lock.json,PKG-INFO,**/dist/**,CHANGELOG.md"

# -----------------------------------------------------------------------------
# Semantic release
# -----------------------------------------------------------------------------

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"
version_variables = [
    "trame_bbox/__init__.py:__version__",
]
version_toml = [
    "pyproject.toml:project.version",
]
build_command = """
  python -m venv .venv
  source .venv/bin/activate
  pip install -U pip
  python -m pip install ".[ci]"
  python -m build .
  pre-commit install
"""

[tool.semantic_release.branches.main]
match = "(release)"
prerelease_token = "rc"
prerelease = false

[semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
